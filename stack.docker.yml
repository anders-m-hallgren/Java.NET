version: '3.7'

services:
  dotnet:
    image: dotnetapp
    networks:
      - app
    build:
      context: .
      dockerfile: docker/dotnet.Dockerfile
    ports:
      - 80:80
      - 443:443
    deploy:
      resources:
        limits:
          memory: 30M
        reservations:
          memory: 15M
      restart_policy:
        condition: on-failure
        delay: 30s
        max_attempts: 3
        window: 60s
    depends_on:
      - redis
  java:
    image: javanetapp
    networks:
      - app
    build:
      context: .
      dockerfile: docker/java.Dockerfile
    deploy:
      endpoint_mode: vip
      replicas: 1
      resources:
        limits:
          memory: 60M
    ports:
      - 8080:8080
    depends_on:
      - redis
    #healthcheck:
    #  test: ["CMD", "curl", "-f", "http://localhost:25000"]
    #  interval: 1m30s
    #  timeout: 10s
    #  retries: 3
    #  start_period: 40s
  graphdb:
    image: tinkerpop/gremlin-server
    volumes:
      - ./docker/graphdb:/opt/gremlin-server/graph
    configs:
      - source: gremlin-server
        target: /opt/gremlin-server/conf/gremlin-server.yaml
        uid: '103'
        gid: '103'
        mode: 0440
    #configs:
    #  - source: graphdb
    ##    target: /opt/gremlin-server/data/graphdb.json
     #   uid: '103'
     #   gid: '103'
     #   mode: 0440
    configs:
      - source: load-graphdb
        target: /opt/gremlin-server/data/load-graphdb.groovy
        uid: '103'
        gid: '103'
        mode: 0440
  rabbit:
    image: rabbitmq:3-management
    networks:
      - app
    ports:
      - 15672:15672
    #/etc/rabbitmq/rabbitmq.config
  redis:
    image: redis:5-alpine
    ports:
      - 6379:6379
    entrypoint: redis-server /etc/redis.conf
    networks:
      - app
    deploy:
      endpoint_mode: vip
      replicas: 1
    configs:
      - source: my_redis_config
        target: /etc/redis.conf
        uid: '103'
        gid: '103'
        mode: 0440
  #jetty:
  #  image: jetty:9-alpine
  #  networks:
  #    - app
  #  volumes:
  #    - /Users/anders/DATA/volume:/myvol
  #    - war:/var/lib/jetty
  #  ports:
  #    - 880:8080
  #    - 8443:8443

configs:
  gremlin-server:
    file: docker/conf/gremlin-server.yaml
  #graphdb:
  #  file: ./conf/graphdb.json
  load-graphdb:
    file: docker/conf/load-graphdb.groovy
  my_redis_config:
    file: docker/conf/my-redis.conf
  my_other_config:
    external: true

volumes:
  data:
  war:

networks:
  app:
    attachable: false
